name: Check

env:
  POETRY_VERSION: "1.8.3"

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  run-checks:
    name: python-${{ matrix.python-version }}, ${{ matrix.os }}
    timeout-minutes: 5

    strategy:
      matrix:
        os:
          - "ubuntu-latest"
        python-version:
          - "3.12"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Poetry
        run: |
          pipx install poetry==${{ env.POETRY_VERSION }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
          cache: poetry

      - name: Install packages
        run: |
          poetry install

      - name: Check Python lint
        run: |
          poetry run -- ruff check . --config pyproject.toml

      - name: Check Python formatting
        run: |
          poetry run -- ruff format --check .  --config pyproject.toml

      - name: Check packaging
        run: |
          poetry check
          poetry lock --check

  typos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@master
