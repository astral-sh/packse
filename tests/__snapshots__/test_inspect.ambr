# serializer version: 1
# name: test_inspect_invalid_target
  dict({
    'exit_code': 1,
    'stderr': '''
      File at '[PWD]/test.json' is not a valid scenario: Input data was truncated.
  
    ''',
    'stdout': '',
  })
# ---
# name: test_inspect_invalid_target_skip_invalid
  dict({
    'exit_code': 0,
    'stderr': '',
    'stdout': '''
      Skipping file: File at '[PWD]/test.json' is not a valid scenario: Input data was truncated
      {
        "scenarios": [
          {
            "name": "example",
            "packages": [
              {
                "name": "example-a-e656679f",
                "versions": [
                  {
                    "requires_python": ">=3.12",
                    "requires": [
                      "example-b-e656679f>1.0.0"
                    ],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "1.0.0"
                  }
                ]
              },
              {
                "name": "example-b-e656679f",
                "versions": [
                  {
                    "requires_python": ">=3.12",
                    "requires": [],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "1.0.0"
                  },
                  {
                    "requires_python": ">=3.12",
                    "requires": [],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "2.0.0"
                  },
                  {
                    "requires_python": ">=3.12",
                    "requires": [
                      "example-c-e656679f"
                    ],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "3.0.0"
                  }
                ]
              }
            ],
            "root": {
              "requires_python": ">=3.12",
              "requires": [
                {
                  "requirement": "example-a-e656679f",
                  "name": "example-a-e656679f",
                  "module_name": "example_a_e656679f"
                }
              ]
            },
            "expected": {
              "satisfiable": true,
              "packages": [
                {
                  "name": "example-a-e656679f",
                  "version": "1.0.0",
                  "module_name": "example_a_e656679f"
                },
                {
                  "name": "example-b-e656679f",
                  "version": "2.0.0",
                  "module_name": "example_b_e656679f"
                }
              ],
              "explanation": "The latest valid version of `b` should be installed. `b==3.0.0` is not valid because it requires `c` which does not exist."
            },
            "environment": {
              "python": "3.12",
              "additional_python": []
            },
            "resolver_options": {
              "python": null,
              "prereleases": false,
              "no_build": [],
              "no_binary": [],
              "universal": false,
              "python_platform": null
            },
            "template": "package",
            "description": "This is an example scenario, in which the user depends on a single package `a` which requires `b`.",
            "_textwrap": true,
            "source": "[PROJECT_ROOT]/scenarios/examples/example.json",
            "version": "e656679f",
            "tree": [
              "\u251c\u2500\u2500 environment",
              "\u2502   \u2514\u2500\u2500 python3.12",
              "\u251c\u2500\u2500 root",
              "\u2502   \u2514\u2500\u2500 requires a",
              "\u2502       \u2514\u2500\u2500 satisfied by a-1.0.0",
              "\u251c\u2500\u2500 a",
              "\u2502   \u2514\u2500\u2500 a-1.0.0",
              "\u2502       \u2514\u2500\u2500 requires b>1.0.0",
              "\u2502           \u251c\u2500\u2500 satisfied by b-2.0.0",
              "\u2502           \u2514\u2500\u2500 satisfied by b-3.0.0",
              "\u2514\u2500\u2500 b",
              "    \u251c\u2500\u2500 b-1.0.0",
              "    \u251c\u2500\u2500 b-2.0.0",
              "    \u2514\u2500\u2500 b-3.0.0",
              "        \u2514\u2500\u2500 requires c",
              "            \u2514\u2500\u2500 unsatisfied: no versions for package"
            ],
            "module_name": "example"
          }
        ]
      }
  
    ''',
  })
# ---
# name: test_inspect_json
  dict({
    'exit_code': 0,
    'stderr': '',
    'stdout': '''
      {
        "scenarios": [
          {
            "name": "example",
            "packages": [
              {
                "name": "example-a-e656679f",
                "versions": [
                  {
                    "requires_python": ">=3.12",
                    "requires": [
                      "example-b-e656679f>1.0.0"
                    ],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "1.0.0"
                  }
                ]
              },
              {
                "name": "example-b-e656679f",
                "versions": [
                  {
                    "requires_python": ">=3.12",
                    "requires": [],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "1.0.0"
                  },
                  {
                    "requires_python": ">=3.12",
                    "requires": [],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "2.0.0"
                  },
                  {
                    "requires_python": ">=3.12",
                    "requires": [
                      "example-c-e656679f"
                    ],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "3.0.0"
                  }
                ]
              }
            ],
            "root": {
              "requires_python": ">=3.12",
              "requires": [
                {
                  "requirement": "example-a-e656679f",
                  "name": "example-a-e656679f",
                  "module_name": "example_a_e656679f"
                }
              ]
            },
            "expected": {
              "satisfiable": true,
              "packages": [
                {
                  "name": "example-a-e656679f",
                  "version": "1.0.0",
                  "module_name": "example_a_e656679f"
                },
                {
                  "name": "example-b-e656679f",
                  "version": "2.0.0",
                  "module_name": "example_b_e656679f"
                }
              ],
              "explanation": "The latest valid version of `b` should be installed. `b==3.0.0` is not valid because it requires `c` which does not exist."
            },
            "environment": {
              "python": "3.12",
              "additional_python": []
            },
            "resolver_options": {
              "python": null,
              "prereleases": false,
              "no_build": [],
              "no_binary": [],
              "universal": false,
              "python_platform": null
            },
            "template": "package",
            "description": "This is an example scenario, in which the user depends on a single package `a` which requires `b`.",
            "_textwrap": true,
            "source": "[PWD]/scenarios/examples/example.json",
            "version": "e656679f",
            "tree": [
              "\u251c\u2500\u2500 environment",
              "\u2502   \u2514\u2500\u2500 python3.12",
              "\u251c\u2500\u2500 root",
              "\u2502   \u2514\u2500\u2500 requires a",
              "\u2502       \u2514\u2500\u2500 satisfied by a-1.0.0",
              "\u251c\u2500\u2500 a",
              "\u2502   \u2514\u2500\u2500 a-1.0.0",
              "\u2502       \u2514\u2500\u2500 requires b>1.0.0",
              "\u2502           \u251c\u2500\u2500 satisfied by b-2.0.0",
              "\u2502           \u2514\u2500\u2500 satisfied by b-3.0.0",
              "\u2514\u2500\u2500 b",
              "    \u251c\u2500\u2500 b-1.0.0",
              "    \u251c\u2500\u2500 b-2.0.0",
              "    \u2514\u2500\u2500 b-3.0.0",
              "        \u2514\u2500\u2500 requires c",
              "            \u2514\u2500\u2500 unsatisfied: no versions for package"
            ],
            "module_name": "example"
          }
        ]
      }
  
    ''',
  })
# ---
# name: test_inspect_no_target_finds_all_valid_scenarios
  dict({
    'exit_code': 0,
    'stderr': '<not included>',
    'stdout': '<not included>',
  })
# ---
# name: test_inspect_one_target_does_not_exist
  dict({
    'exit_code': 1,
    'stderr': '''
      File 'foo' not found.
  
    ''',
    'stdout': '',
  })
# ---
# name: test_inspect_target_does_not_exist
  dict({
    'exit_code': 1,
    'stderr': '''
      File 'foo' not found.
  
    ''',
    'stdout': '',
  })
# ---
# name: test_inspect_toml
  dict({
    'exit_code': 0,
    'stderr': '',
    'stdout': '''
      {
        "scenarios": [
          {
            "name": "example-toml",
            "packages": [
              {
                "name": "example-toml-a-1b8d92d0",
                "versions": [
                  {
                    "requires_python": ">=3.12",
                    "requires": [
                      "example-toml-b-1b8d92d0>1.0.0"
                    ],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "1.0.0"
                  }
                ]
              },
              {
                "name": "example-toml-b-1b8d92d0",
                "versions": [
                  {
                    "requires_python": ">=3.12",
                    "requires": [],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "1.0.0"
                  },
                  {
                    "requires_python": ">=3.12",
                    "requires": [],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "2.0.0"
                  },
                  {
                    "requires_python": ">=3.12",
                    "requires": [
                      "example-toml-c-1b8d92d0"
                    ],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "3.0.0"
                  }
                ]
              }
            ],
            "root": {
              "requires_python": ">=3.12",
              "requires": [
                {
                  "requirement": "example-toml-a-1b8d92d0",
                  "name": "example-toml-a-1b8d92d0",
                  "module_name": "example_toml_a_1b8d92d0"
                }
              ]
            },
            "expected": {
              "satisfiable": true,
              "packages": [
                {
                  "name": "example-toml-a-1b8d92d0",
                  "version": "1.0.0",
                  "module_name": "example_toml_a_1b8d92d0"
                },
                {
                  "name": "example-toml-b-1b8d92d0",
                  "version": "2.0.0",
                  "module_name": "example_toml_b_1b8d92d0"
                }
              ],
              "explanation": "The latest valid version of `b` should be installed. `b==3.0.0` is not valid because it requires `c` which does not exist."
            },
            "environment": {
              "python": "3.12",
              "additional_python": []
            },
            "resolver_options": {
              "python": null,
              "prereleases": false,
              "no_build": [],
              "no_binary": [],
              "universal": false,
              "python_platform": null
            },
            "template": "package",
            "description": "This is an example scenario written in TOML, in which the user depends on a single package `a` which requires `b`.",
            "_textwrap": false,
            "source": "[PWD]/scenarios/examples/example.toml",
            "version": "1b8d92d0",
            "tree": [
              "\u251c\u2500\u2500 environment",
              "\u2502   \u2514\u2500\u2500 python3.12",
              "\u251c\u2500\u2500 root",
              "\u2502   \u2514\u2500\u2500 requires a",
              "\u2502       \u2514\u2500\u2500 satisfied by a-1.0.0",
              "\u251c\u2500\u2500 a",
              "\u2502   \u2514\u2500\u2500 a-1.0.0",
              "\u2502       \u2514\u2500\u2500 requires b>1.0.0",
              "\u2502           \u251c\u2500\u2500 satisfied by b-2.0.0",
              "\u2502           \u2514\u2500\u2500 satisfied by b-3.0.0",
              "\u2514\u2500\u2500 b",
              "    \u251c\u2500\u2500 b-1.0.0",
              "    \u251c\u2500\u2500 b-2.0.0",
              "    \u2514\u2500\u2500 b-3.0.0",
              "        \u2514\u2500\u2500 requires c",
              "            \u2514\u2500\u2500 unsatisfied: no versions for package"
            ],
            "module_name": "example_toml"
          }
        ]
      }
  
    ''',
  })
# ---
# name: test_inspect_yaml
  dict({
    'exit_code': 0,
    'stderr': '',
    'stdout': '''
      {
        "scenarios": [
          {
            "name": "example-yaml",
            "packages": [
              {
                "name": "example-yaml-a-41a12a49",
                "versions": [
                  {
                    "requires_python": ">=3.12",
                    "requires": [
                      "example-yaml-b-41a12a49>1.0.0"
                    ],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "1.0.0"
                  }
                ]
              },
              {
                "name": "example-yaml-b-41a12a49",
                "versions": [
                  {
                    "requires_python": ">=3.12",
                    "requires": [],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "1.0.0"
                  },
                  {
                    "requires_python": ">=3.12",
                    "requires": [],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "2.0.0"
                  },
                  {
                    "requires_python": ">=3.12",
                    "requires": [
                      "example-yaml-c-41a12a49"
                    ],
                    "extras": [],
                    "sdist": true,
                    "wheel": true,
                    "yanked": false,
                    "wheel_tags": [],
                    "description": "",
                    "version": "3.0.0"
                  }
                ]
              }
            ],
            "root": {
              "requires_python": ">=3.12",
              "requires": [
                {
                  "requirement": "example-yaml-a-41a12a49",
                  "name": "example-yaml-a-41a12a49",
                  "module_name": "example_yaml_a_41a12a49"
                }
              ]
            },
            "expected": {
              "satisfiable": true,
              "packages": [
                {
                  "name": "example-yaml-a-41a12a49",
                  "version": "1.0.0",
                  "module_name": "example_yaml_a_41a12a49"
                },
                {
                  "name": "example-yaml-b-41a12a49",
                  "version": "2.0.0",
                  "module_name": "example_yaml_b_41a12a49"
                }
              ],
              "explanation": "The latest valid version of `b` should be installed. `b==3.0.0` is not valid because it requires `c` which does not exist."
            },
            "environment": {
              "python": "3.12",
              "additional_python": []
            },
            "resolver_options": {
              "python": null,
              "prereleases": false,
              "no_build": [],
              "no_binary": [],
              "universal": false,
              "python_platform": null
            },
            "template": "package",
            "description": "This is an example scenario written in YAML, in which the user depends on a single package `a` which requires `b`.",
            "_textwrap": false,
            "source": "[PWD]/scenarios/examples/example.yaml",
            "version": "41a12a49",
            "tree": [
              "\u251c\u2500\u2500 environment",
              "\u2502   \u2514\u2500\u2500 python3.12",
              "\u251c\u2500\u2500 root",
              "\u2502   \u2514\u2500\u2500 requires a",
              "\u2502       \u2514\u2500\u2500 satisfied by a-1.0.0",
              "\u251c\u2500\u2500 a",
              "\u2502   \u2514\u2500\u2500 a-1.0.0",
              "\u2502       \u2514\u2500\u2500 requires b>1.0.0",
              "\u2502           \u251c\u2500\u2500 satisfied by b-2.0.0",
              "\u2502           \u2514\u2500\u2500 satisfied by b-3.0.0",
              "\u2514\u2500\u2500 b",
              "    \u251c\u2500\u2500 b-1.0.0",
              "    \u251c\u2500\u2500 b-2.0.0",
              "    \u2514\u2500\u2500 b-3.0.0",
              "        \u2514\u2500\u2500 requires c",
              "            \u2514\u2500\u2500 unsatisfied: no versions for package"
            ],
            "module_name": "example_yaml"
          }
        ]
      }
  
    ''',
  })
# ---
